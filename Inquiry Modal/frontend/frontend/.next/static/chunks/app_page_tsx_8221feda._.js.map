{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/shiv%20krupa/Downloads/Inquiry%20Modal/frontend/app/page.tsx"],"sourcesContent":["'use client';\nimport Image from \"next/image\";\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { useRouter } from \"next/navigation\";\nimport API_BASE from \"../utils/config\";\n\nfetch(`${API_BASE}/api/inquiries`);\n\n\nconst images = [\n  \"/image2.jpg\",\n  \"/image4.jpg\",\n  \"/image6.jpg\",\n];\n\nexport default function LoginPage() {\n  const [current, setCurrent] = useState(0);\n  const [step, setStep] = useState<\"login\" | \"forgot\" | \"otp\" | \"reset\">(\"login\");\n  const [loginEmail, setLoginEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [resetToken, setResetToken] = useState(\"\");\n  const router = useRouter();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrent((prev) => (prev + 1) % images.length);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Dummy handlers for demonstration\n  const handleSendOtp = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const res = await fetch(`${API_BASE}/auth/send-otp`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email: loginEmail }),\n      });\n\n      if (!res.ok) {\n        const data = await res.json();\n        throw new Error(data.detail || \"Failed to send OTP\");\n      }\n\n      setStep(\"otp\");\n    } catch (err: unknown) {\n      if (err instanceof Error) {\n        alert(err.message);\n      } else {\n        alert(\"An unknown error occurred\");\n      }\n    }\n  };\n\n\n\n  const handleVerifyOtp = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      const res = await fetch(`${API_BASE}/auth/verify-otp`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          email: loginEmail,\n          otp: otp,\n        }),\n      });\n\n      const data = await res.json();\n      if (!res.ok) {\n        throw new Error(data.detail || \"Invalid OTP\");\n      }\n\n      setResetToken(data.reset_token);\n      setStep(\"reset\");\n    } catch (err) {\n      alert(\"Invalid or expired OTP\");\n      console.error(err);\n    }\n  };\n\n\n  const handleResetPassword = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`${API_BASE}/auth/reset-password`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          token: resetToken,\n          new_password: password,\n        }),\n      });\n\n      if (!res.ok) {\n        const data = await res.json();\n        throw new Error(data.detail || \"Failed to reset password\");\n      }\n\n      alert(\"Password reset successful!\");\n      setStep(\"login\");\n      setLoginEmail(\"\");\n      setOtp(\"\");\n      setPassword(\"\");\n      setConfirmPassword(\"\");\n    } catch (err) {\n      alert(\"Reset failed\");\n      console.error(err);\n    }\n  };\n\n\n  // Add this handler for sign in\n  const handleSignIn = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch(`${API_BASE}/auth/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email: loginEmail, password: password }), // use correct password state\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Invalid email or password\");\n      }\n\n      const data = await response.json();\n      localStorage.setItem(\"token\", data.access_token); // store token\n      localStorage.setItem('role', data.role);\n      localStorage.setItem('userName', data.userName);\n      localStorage.setItem(\"userId\", data.userId);\n      router.push(\"/dashboard\");\n    } catch (err) {\n      console.error(err);\n      if (err instanceof Error) {\n        alert(err.message);\n      } else {\n        alert(\"An unknown error occurred\");\n      }\n    }\n  };\n\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-[#E5E7EB] px-2\">\n      <div className=\"bg-white rounded-lg shadow-2xl flex flex-col-reverse md:flex-row w-full max-w-4xl md:max-w-6xl overflow-hidden\">\n        {/* Left: Login/Forgot/OTP/Reset Form */}\n        <div className=\"w-full md:w-1/2 flex flex-col justify-center h-auto min-h-[400px] md:h-[600px] px-6 md:px-10 py-8 md:py-12 max-w-md mx-auto\">\n          {step === \"login\" && (\n            <>\n              <h2 className=\"text-2xl text-center font-bold mb-6\">Sign In</h2>\n              <form className=\"space-y-5\" onSubmit={handleSignIn}>\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">Email</label>\n                  <input\n                    type=\"email\"\n                    value={loginEmail}                             // ✅ bound to state\n                    onChange={(e) => setLoginEmail(e.target.value)} // ✅ update state\n                    className=\"w-full border border-gray-300 rounded text-sm px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-blue-50\"\n                    placeholder=\"Enter your email\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">Password</label>\n                  <input\n                    type=\"password\"\n                    value={password}                             // ✅ bound to state\n                    onChange={(e) => setPassword(e.target.value)} // ✅ update state\n                    className=\"w-full border border-gray-300 rounded text-sm px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-blue-50\"\n                    placeholder=\"Enter your password\"\n                  />\n                </div>\n                <div className=\"flex flex-col md:flex-row md:justify-between md:items-center text-sm mb-4 gap-2\">\n                  <label className=\"flex items-center\">\n                    <input type=\"checkbox\" className=\"mr-2\" />\n                    Remember me\n                  </label>\n                  <button\n                    type=\"button\"\n                    className=\"text-blue-600 hover:underline text-right\"\n                    onClick={() => setStep(\"forgot\")}\n                  >\n                    Forgot Password?\n                  </button>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full bg-black text-white py-2 rounded font-semibold hover:bg-gray-800 transition\"\n                >\n                  Sign In\n                </button>\n              </form>\n            </>\n          )}\n\n          {step === \"forgot\" && (\n            <>\n              <h2 className=\"text-2xl text-center font-bold mb-6\">Forgot Password</h2>\n              <form className=\"space-y-5\" onSubmit={handleSendOtp}>\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">Enter your email</label>\n                  <input\n                    type=\"email\"\n                    value={loginEmail}\n                    onChange={e => setLoginEmail(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded text-sm px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-blue-50\"\n                    placeholder=\"Enter your email\"\n                    required\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full bg-black text-white py-2 rounded font-semibold hover:bg-gray-800 transition\"\n                >\n                  Send OTP\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"w-full text-gray-600 py-2 rounded font-semibold hover:underline\"\n                  onClick={() => setStep(\"login\")}\n                >\n                  Back to Sign In\n                </button>\n              </form>\n            </>\n          )}\n\n          {step === \"otp\" && (\n            <>\n              <h2 className=\"text-2xl text-center font-bold mb-6\">Enter OTP</h2>\n              <form className=\"space-y-5\" onSubmit={handleVerifyOtp}>\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">OTP sent to {loginEmail}</label>\n                  <input\n                    type=\"text\"\n                    value={otp}\n                    onChange={e => setOtp(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded text-sm px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-blue-50\"\n                    placeholder=\"Enter OTP\"\n                    required\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full bg-black text-white py-2 rounded font-semibold hover:bg-gray-800 transition\"\n                >\n                  Verify OTP\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"w-full text-gray-600 py-2 rounded font-semibold hover:underline\"\n                  onClick={() => setStep(\"forgot\")}\n                >\n                  Back\n                </button>\n              </form>\n            </>\n          )}\n\n          {step === \"reset\" && (\n            <>\n              <h2 className=\"text-2xl text-center font-bold mb-6\">Reset Password</h2>\n              <form className=\"space-y-5\" onSubmit={handleResetPassword}>\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">New Password</label>\n                  <input\n                    type=\"password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded text-sm px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-blue-50\"\n                    placeholder=\"Enter new password\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium mb-2\">Confirm Password</label>\n                  <input\n                    type=\"password\"\n                    value={confirmPassword}\n                    onChange={e => setConfirmPassword(e.target.value)}\n                    className=\"w-full border border-gray-300 rounded text-sm px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 bg-blue-50\"\n                    placeholder=\"Confirm new password\"\n                    required\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"w-full bg-black text-white py-2 rounded font-semibold hover:bg-gray-800 transition\"\n                >\n                  Reset Password\n                </button>\n              </form>\n            </>\n          )}\n        </div>\n        {/* Right: Image & Text */}\n        <div className=\"relative w-full md:w-1/2 h-64 min-h-[450px] md:h-auto flex flex-col justify-end items-start bg-black\">\n          <Image\n            src={images[current]}\n            alt=\"Profile\"\n            fill\n            className=\"object-cover opacity-90 transition-all duration-700\"\n            priority\n            sizes=\"(max-width: 768px) 100vw, 50vw\"\n          />\n          <div className=\"absolute bottom-10 left-10 text-white z-10\">\n            <div className=\"text-3xl font-bold mb-2\"></div>\n            <div className=\"text-xl font-semibold\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}