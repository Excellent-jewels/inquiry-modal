{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/shiv%20krupa/Downloads/Inquiry%20Modal/frontend/components/StatusBadge.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\ntype StatusBadgeProps = {\r\n  status: string;\r\n  className?: string;\r\n};\r\n\r\nconst statusStyles: Record<string, string> = {\r\n  \"pending\": \"bg-yellow-100 text-yellow-800 border border-yellow-300\",\r\n  \"hold\": \"bg-green-700 text-white\",\r\n  \"not available\": \"bg-red-100 text-red-700 border border-red-300\",\r\n  \"on memo\": \"bg-blue-100 text-blue-700 border border-blue-300\",\r\n  \"confirmed - toh\": \"bg-purple-700 text-white\",\r\n  \"hold - toh\": \"bg-orange-100 text-orange-700 border border-orange-300\",\r\n  \"release\": \"bg-red-700 text-white\",\r\n  \"added to stock\": \"bg-red-800 text-white\",\r\n  \"in exhibition\": \"bg-blue-100 text-blue-700 border border-blue-300\",\r\n  \"available\": \"bg-green-100 text-green-700 border border-green-300\",\r\n  \"released\": \"bg-red-700 text-white\",\r\n  \"sent to vendor\": \"bg-blue-800 text-white\",\r\n  \"from other\": \"bg-cyan-300 text-black\",\r\n  \"released, staging\": \"bg-red-800 text-white\",\r\n  \"own hk\": \"bg-green-800 text-white\",\r\n  \"own india\": \"bg-blue-700 text-white\",\r\n  \"surat\": \"bg-slate-700 text-white\",\r\n  \"mumbai\": \"bg-amber-800 text-white\",\r\n  \"loose\": \"bg-blue-700 text-white\",\r\n  \"in jewellery\": \"bg-purple-700 text-white\",\r\n  \"certified\": \"bg-pink-200 text-black\",\r\n  \"natural\": \"bg-green-700 text-white\",\r\n  \"rcvd\": \"bg-green-700 text-white\",\r\n  \"pending payment\": \"bg-red-700 text-white\",\r\n  \"aprvd\": \"bg-blue-900 text-white\",\r\n  \"half rcvd\": \"bg-yellow-200 text-yellow-900\",\r\n  \"transfer ss sent\": \"bg-green-100 text-green-800 border border-green-300\",\r\n  \"dispatched\": \"bg-blue-600 text-white\",\r\n  \"null\": \"bg-gray-100 text-gray-400 border border-gray-200\",\r\n  \"none\": \"bg-gray-100 text-gray-400 border border-gray-200\",\r\n  // QC Remark\r\n  \"ok\": \"bg-green-600 text-white\",\r\n  \"blue tinge\": \"bg-blue-700 text-white\",\r\n  \"other tinge\": \"bg-purple-300 text-purple-900\",\r\n  \"culet broken\": \"bg-yellow-900 text-yellow-100\",\r\n  \"other issue\": \"bg-red-700 text-white\",\r\n  \"no bgm\": \"bg-yellow-200 text-yellow-900\",\r\n  // Status Of Stone\r\n  \"stone - oh\": \"bg-blue-200 text-blue-900\",\r\n  \"cert - oh\": \"bg-purple-400 text-white\",\r\n  \"s & c both - on\": \"bg-blue-100 text-blue-900\",\r\n  \"mumbai hold - ready to dispatch\": \"bg-yellow-300 text-yellow-900\",\r\n  \"tommorow\": \"bg-lime-400 text-black\",\r\n  \"on the way\": \"bg-purple-200 text-purple-900\",\r\n  \"hk office\": \"bg-green-200 text-green-900\",\r\n  // OT Remark\r\n  \"sent to vndr.\": \"bg-blue-700 text-white\",\r\n  \"fr other\": \"bg-cyan-400 text-black\",\r\n  \"released, sta\": \"bg-red-800 text-white\",\r\n  // Location\r\n  \"hongkong\": \"bg-blue-200 text-blue-900\",\r\n  \"usa\": \"bg-blue-100 text-blue-900\",\r\n  \"other\": \"bg-red-700 text-white\",\r\n};\r\n\r\nexport default function StatusBadge({ status, className = \"\" }: StatusBadgeProps) {\r\n  const style =\r\n    statusStyles[(status ?? \"\").trim().toLowerCase()] ||\r\n    \"bg-gray-200 text-gray-700 border border-gray-300\";\r\n  return (\r\n    <span\r\n      className={`inline-block rounded px-2 py-0.5 text-xs font-semibold whitespace-nowrap ${style} ${className}`}\r\n    >\r\n      {status || \"None\"}\r\n    </span>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAOA,MAAM,eAAuC;IAC3C,WAAW;IACX,QAAQ;IACR,iBAAiB;IACjB,WAAW;IACX,mBAAmB;IACnB,cAAc;IACd,WAAW;IACX,kBAAkB;IAClB,iBAAiB;IACjB,aAAa;IACb,YAAY;IACZ,kBAAkB;IAClB,cAAc;IACd,qBAAqB;IACrB,UAAU;IACV,aAAa;IACb,SAAS;IACT,UAAU;IACV,SAAS;IACT,gBAAgB;IAChB,aAAa;IACb,WAAW;IACX,QAAQ;IACR,mBAAmB;IACnB,SAAS;IACT,aAAa;IACb,oBAAoB;IACpB,cAAc;IACd,QAAQ;IACR,QAAQ;IACR,YAAY;IACZ,MAAM;IACN,cAAc;IACd,eAAe;IACf,gBAAgB;IAChB,eAAe;IACf,UAAU;IACV,kBAAkB;IAClB,cAAc;IACd,aAAa;IACb,mBAAmB;IACnB,mCAAmC;IACnC,YAAY;IACZ,cAAc;IACd,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,iBAAiB;IACjB,WAAW;IACX,YAAY;IACZ,OAAO;IACP,SAAS;AACX;AAEe,SAAS,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,EAAoB;IAC9E,MAAM,QACJ,YAAY,CAAC,CAAC,UAAU,EAAE,EAAE,IAAI,GAAG,WAAW,GAAG,IACjD;IACF,qBACE,8OAAC;QACC,WAAW,CAAC,yEAAyE,EAAE,MAAM,CAAC,EAAE,WAAW;kBAE1G,UAAU;;;;;;AAGjB","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/shiv%20krupa/Downloads/Inquiry%20Modal/frontend/components/StatusUpdateModal.tsx"],"sourcesContent":["import StatusBadge from \"./StatusBadge\";\r\n\r\nexport const typeOptions = [\r\n  \"Loose\",\r\n  \"In Jewellery\",\r\n  \"Certified\",\r\n  \"Natural\",\r\n];\r\n\r\nexport const availabilityOptions = [\r\n  \"Pending\",\r\n  \"Hold\",\r\n  \"Not Available\",\r\n  \"On Memo\",\r\n  \"Confirmed - TOH\",\r\n  \"Hold - TOH\",\r\n  \"Release\",\r\n  \"Added to Stock\",\r\n  \"In Exhibition\",\r\n  \"Dispatched\",\r\n];\r\n\r\nexport const paymentOptions = [\r\n  \"RCVD\",\r\n  \"Pending\",\r\n  \"APRVd\",\r\n  \"HALF RCVD\",\r\n  \"Transfer SS Sent\",\r\n  \"Null\",\r\n];\r\n\r\nexport const qcRemarkOptions = [\r\n  \"OK\",\r\n  \"BLUE TINGE\",\r\n  \"OTHER TINGE\",\r\n  \"CULET BROKEN\",\r\n  \"OTHER ISSUE\",\r\n  \"NO BGM\",\r\n  \"Null\",\r\n];\r\n\r\nexport const statusOfStoneOptions = [\r\n  \"Stone - OH\",\r\n  \"Cert - OH\",\r\n  \"Pending\",\r\n  \"S & C BOTH - ON\",\r\n  \"Mumbai Hold - Ready to Dispatch\",\r\n  \"Tomorrow\",\r\n  \"On the Way\",\r\n  \"HK Office\",\r\n  \"Null\",\r\n];\r\n\r\nexport const otRemarkOptions = [\r\n  \"Available\",\r\n  \"Not Available\",\r\n  \"Released\",\r\n  \"Sent to Vndr.\",\r\n  \"Fr Other\",\r\n  \"Released, Sta\",\r\n  \"Own HK\",\r\n  \"Own India\",\r\n  \"Surat\",\r\n  \"Mumbai\",\r\n  \"Null\",\r\n];\r\n\r\nexport const locationOptions = [\r\n  \"Surat\",\r\n  \"Mumbai\",\r\n  \"Hongkong\",\r\n  \"USA\",\r\n  \"Other\",\r\n  \"Null\",\r\n];\r\n\r\n// Generic dropdown component for table cells\r\nexport function StatusDropdown({\r\n  options,\r\n  value,\r\n  onChange,\r\n  open,\r\n  setOpen,\r\n  id,\r\n  colKey,\r\n}: {\r\n  options: string[];\r\n  value: string;\r\n  onChange: (val: string) => void;\r\n  open: string | number | null;\r\n  setOpen: (val: string | number | null) => void;\r\n  id: string | number;\r\n  colKey: string;\r\n}) {\r\n  return (\r\n    <>\r\n      <span\r\n        style={{ cursor: \"pointer\", display: \"inline-block\" }}\r\n        onClick={() => setOpen(open === `${colKey}-${id}` ? null : `${colKey}-${id}`)}\r\n      >\r\n        <StatusBadge status={value} />\r\n      </span>\r\n      {open === `${colKey}-${id}` && (\r\n        <div\r\n          className=\"absolute z-10 bg-gray-50 border border-gray-300 shadow-md mt-2 left-1/2 -translate-x-1/2 min-w-[160px] text-left\"\r\n          style={{ minWidth: 160 }}\r\n        >\r\n          {options.map((option) => (\r\n            <div\r\n              key={option}\r\n              className=\"p-2 pl-2 hover:bg-gray-100 cursor-pointer flex items-center\"\r\n              onClick={() => {\r\n                onChange(option);\r\n                setOpen(null);\r\n              }}\r\n            >\r\n              <StatusBadge status={option} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;AAEO,MAAM,cAAc;IACzB;IACA;IACA;IACA;CACD;AAEM,MAAM,sBAAsB;IACjC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,iBAAiB;IAC5B;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,kBAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,uBAAuB;IAClC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,kBAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAEM,MAAM,kBAAkB;IAC7B;IACA;IACA;IACA;IACA;IACA;CACD;AAGM,SAAS,eAAe,EAC7B,OAAO,EACP,KAAK,EACL,QAAQ,EACR,IAAI,EACJ,OAAO,EACP,EAAE,EACF,MAAM,EASP;IACC,qBACE;;0BACE,8OAAC;gBACC,OAAO;oBAAE,QAAQ;oBAAW,SAAS;gBAAe;gBACpD,SAAS,IAAM,QAAQ,SAAS,GAAG,OAAO,CAAC,EAAE,IAAI,GAAG,OAAO,GAAG,OAAO,CAAC,EAAE,IAAI;0BAE5E,cAAA,8OAAC,0HAAA,CAAA,UAAW;oBAAC,QAAQ;;;;;;;;;;;YAEtB,SAAS,GAAG,OAAO,CAAC,EAAE,IAAI,kBACzB,8OAAC;gBACC,WAAU;gBACV,OAAO;oBAAE,UAAU;gBAAI;0BAEtB,QAAQ,GAAG,CAAC,CAAC,uBACZ,8OAAC;wBAEC,WAAU;wBACV,SAAS;4BACP,SAAS;4BACT,QAAQ;wBACV;kCAEA,cAAA,8OAAC,0HAAA,CAAA,UAAW;4BAAC,QAAQ;;;;;;uBAPhB;;;;;;;;;;;;AAcnB","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/shiv%20krupa/Downloads/Inquiry%20Modal/frontend/hooks/useUserRole.ts"],"sourcesContent":["// hooks/useUserRole.ts\r\nimport { useState, useEffect } from 'react';\r\nexport type UserRole = 'admin' | 'sales' | 'backend' | 'account' | null;\r\n\r\nexport function useUserRole() {\r\n  const [role, setRole] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const storedRole = localStorage.getItem('role') as UserRole;\r\n    if (storedRole) {\r\n      setRole(storedRole);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  return { role, loading };\r\n}\r\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;AACvB;;AAGO,SAAS;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,YAAY;YACd,QAAQ;QACV;QACA,WAAW;IACb,GAAG,EAAE;IAEL,OAAO;QAAE;QAAM;IAAQ;AACzB","debugId":null}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/shiv%20krupa/Downloads/Inquiry%20Modal/frontend/components/InquiryTable.tsx"],"sourcesContent":["'use client';\r\nimport React, { useState } from \"react\";\r\nimport { Trash2, Pencil } from \"lucide-react\";\r\nimport {\r\n  typeOptions,\r\n  availabilityOptions,\r\n  paymentOptions,\r\n  qcRemarkOptions,\r\n  statusOfStoneOptions,\r\n  otRemarkOptions,\r\n  locationOptions,\r\n  StatusDropdown,\r\n} from \"./StatusUpdateModal\";\r\nimport { useUserRole } from \"../hooks/useUserRole\";\r\nimport StatusBadge from \"./StatusBadge\";\r\nimport axios from \"axios\";\r\nimport API_BASE from \"../utils/config\";\r\n\r\ntype Inquiry = {\r\n  [key: string]: any;\r\n  id: number | string;\r\n};\r\n\r\ntype InquiryTableProps = {\r\n  data: Inquiry[];\r\n  columns: { key: string; label: string }[];\r\n  onDelete?: (id: number | string) => void;\r\n  onEdit?: (id: number | string, updatedRow: Inquiry) => void;\r\n  onCheckboxChange?: (rowId: number | string, colKey: string, value: boolean | string) => void;\r\n  onSelectAll?: (colKey: string, checked: boolean) => void;\r\n  defaultAvailability?: string;\r\n  rowCheckbox?: boolean;\r\n  selectedIds?: (number | string)[];\r\n  selectedRows: (number | string)[];\r\n  onRowCheckbox?: (id: number | string, checked: boolean) => void;\r\n  onSelectAllRows?: (checked: boolean) => void;\r\n  role: string;\r\n  showInvoiceColumn?: boolean;\r\n  pageType?: string;\r\n  showBillColumn?: boolean;\r\n};\r\n\r\nexport default function InquiryTable({\r\n  data,\r\n  columns,\r\n  onDelete,\r\n  onEdit,\r\n  onCheckboxChange,\r\n  onSelectAll,\r\n  defaultAvailability = \"PENDING\",\r\n  rowCheckbox = false,\r\n  selectedRows = [],\r\n  onRowCheckbox,\r\n  onSelectAllRows,\r\n  role,\r\n  showInvoiceColumn = false,\r\n  pageType = \"sales\",\r\n  showBillColumn = false,\r\n}: InquiryTableProps) {\r\n  const { role: userRole } = useUserRole();\r\n  const [openTypeMenu, setOpenTypeMenu] = useState<number | string | null>(null);\r\n  const [editingRowId, setEditingRowId] = useState<number | string | null>(null);\r\n  const [editValues, setEditValues] = useState<{ [key: string]: any }>({});\r\n  const [selectedRowsState, setSelectedRows] = useState<(number | string)[]>([]);\r\n  const [invoiceFiles, setInvoiceFiles] = useState<{ [key: string]: string }>({});\r\n\r\n\r\n  const editableFieldsByRole: { [key: string]: string[] } = {\r\n    admin: columns.map((col) => col.key),\r\n    sales: columns.map((col) => col.key).filter((key) =>\r\n      [\r\n        'inquiry_id', 'inq_date', 'today_date', 'period', 'sales', 'buyer', 'stockId',\r\n        'shape', 'ct', 'color', 'clarity', 'cut', 'po', 'sym', 'lab', 'report',\r\n        'disPpc', 'ppc', 'amt', 'type', 'availability', 'payment', 'remark'\r\n      ].includes(key)\r\n    ),\r\n    backend: [\r\n      'location', 'otRemark', 'time', 'statusOfStone', 'qcRemark',\r\n      'stoneConfirmationRemark', 'entryStatus', 'locationRemark'\r\n    ],\r\n    account: []\r\n  };\r\n\r\n  const editableFields = userRole && editableFieldsByRole[userRole] ? editableFieldsByRole[userRole] : [];\r\n\r\n  const handleEdit = (id: number | string) => {\r\n    const row = data.find((d) => d.id === id);\r\n    if (row?.sale_team_status === \"Dispatched\") return; // Prevent editing\r\n    setEditingRowId(id);\r\n    setEditValues(row ? { ...row } : {});\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (onEdit && editingRowId) {\r\n      onEdit(editingRowId, { ...editValues, id: editingRowId });\r\n    }\r\n    setEditingRowId(null);\r\n    setEditValues({});\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditingRowId(null);\r\n    setEditValues({});\r\n  };\r\n\r\n  const isDropdownField = (key: string) =>\r\n    [\"type\", \"availability\", \"payment\", \"qcRemark\", \"statusOfStone\", \"otRemark\", \"location\"].includes(key);\r\n\r\n  const isAutoSaveDropdown = (key: string) =>\r\n    (userRole === \"sales\" && [\"type\", \"availability\", \"payment\"].includes(key)) ||\r\n    (userRole === \"backend\" && [\"qcRemark\", \"statusOfStone\", \"otRemark\", \"location\"].includes(key)) ||\r\n    (userRole === \"admin\" && isDropdownField(key));\r\n\r\n  const getDropdownOptions = (key: string) => {\r\n    switch (key) {\r\n      case \"type\": return typeOptions;\r\n      case \"availability\": return availabilityOptions;\r\n      case \"payment\": return paymentOptions;\r\n      case \"qcRemark\": return qcRemarkOptions;\r\n      case \"statusOfStone\": return statusOfStoneOptions;\r\n      case \"otRemark\": return otRemarkOptions;\r\n      case \"location\": return locationOptions;\r\n      default: return [];\r\n    }\r\n  };\r\n\r\n  const isAllRowsSelected = data.length > 0 && data.every(row => selectedRows.includes(row.id));\r\n\r\n  const InvoiceIcon = ({ color = \"#325c85\" }) => (\r\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n      <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" fill=\"none\" stroke={color} strokeWidth=\"2\" />\r\n      <path d=\"M8 12h8M8 12l4-4m-4 4l4 4\" stroke={color} strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" fill=\"none\" />\r\n      <polyline points=\"16 3 21 3 21 8\" stroke={color} strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  \r\n\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto bg-white shadow h-[calc(80vh-180px)] max-h-screen\">\r\n      <table className=\"min-w-[1800px] w-full text-xs border border-gray-300\">\r\n        <thead className=\"sticky top-0 z-100 bg-gray-200 border-b border-gray-300\">\r\n          <tr className=\"text-gray-700\">\r\n            {rowCheckbox && (\r\n              <th className=\"py-2 px-3 font-semibold border border-gray-300 text-center whitespace-nowrap\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={data.length > 0 && data.every(row => selectedRows.includes(row.id))}\r\n                  onChange={e => onSelectAllRows && onSelectAllRows(e.target.checked)}\r\n                />\r\n              </th>\r\n            )}\r\n            {showInvoiceColumn && [\"admin\", \"sales\", \"account\"].includes(role) && (\r\n              <th className=\"py-3 px-3 border border-gray-300 text-center align-middle\">\r\n                Invoice\r\n              </th>\r\n            )}\r\n            <th className=\"py-2 px-3 font-semibold border border-gray-300 text-center whitespace-nowrap\">Inquiry ID</th>\r\n            {columns.map((col) => (\r\n              <th key={col.key} className=\"py-2 px-3 font-semibold border border-gray-300 text-center whitespace-nowrap\">\r\n                {col.label}\r\n              </th>\r\n            ))}\r\n            {onDelete && <th className=\"py-2 px-3 font-semibold border border-gray-300\">Actions</th>}\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {data.length === 0 && (\r\n            <tr>\r\n              <td\r\n                colSpan={columns.length + (onDelete ? 2 : 1) + (rowCheckbox ? 1 : 0)}\r\n                className=\"text-center py-4 text-gray-400 border border-gray-200 whitespace-nowrap\"\r\n              >\r\n                No inquiries found.\r\n              </td>\r\n            </tr>\r\n          )}\r\n          {data.map((inquiry) => {\r\n            const isEditing = editingRowId === inquiry.id;\r\n            return (\r\n              <tr key={inquiry.id}>\r\n                {rowCheckbox && (\r\n                  <td className=\"py-3 px-3 border border-gray-200 text-center align-middle whitespace-nowrap\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedRows.includes(inquiry.id)}\r\n                      onChange={e => onRowCheckbox && onRowCheckbox(inquiry.id, e.target.checked)}\r\n                    />\r\n                  </td>\r\n                )}\r\n                {/* --- Invoice column added here --- */}\r\n                {showInvoiceColumn && [\"admin\", \"sales\", \"account\"].includes(role) && (\r\n                  <td className=\"py-3 px-3 border border-gray-200 text-center align-middle whitespace-nowrap\">\r\n                    {[\"admin\", \"sales\"].includes(role) ? (\r\n                      <form\r\n                        onSubmit={async (e) => {\r\n                          e.preventDefault();\r\n                          const fileInput = e.currentTarget.elements.namedItem(\"invoiceFile\") as HTMLInputElement;\r\n                          if (!fileInput.files?.[0]) return;\r\n                          const file = fileInput.files[0];\r\n                          const formData = new FormData();\r\n                          formData.append(\"invoice\", file);\r\n                          formData.append(\"inquiry_id\", inquiry.inquiry_id);\r\n\r\n                          await fetch(`${API_BASE}/inquiries/upload-invoice`, {\r\n                            method: \"POST\",\r\n                            body: formData,\r\n                          });\r\n\r\n                          alert(\"Invoice uploaded!\");\r\n                          window.location.reload();\r\n                        }}\r\n                      >\r\n                        <input\r\n                          type=\"file\"\r\n                          name=\"invoiceFile\"\r\n                          accept=\".pdf,.jpg,.png\"\r\n                          style={{ display: \"none\" }}\r\n                          id={`invoice-file-${inquiry.id}`}\r\n                          onChange={(e) => e.currentTarget.form?.requestSubmit()}\r\n                        />\r\n                        <label htmlFor={`invoice-file-${inquiry.id}`} style={{ cursor: \"pointer\" }}>\r\n                          <InvoiceIcon />\r\n                        </label>\r\n                        {inquiry.invoice_file ? (\r\n                          <a\r\n                            href={`${API_BASE}/uploaded_invoices/${inquiry.invoice_file}`}\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                            className=\"block mt-1 text-blue-500 text-xs underline\"\r\n                          >\r\n                            View Invoice\r\n                          </a>\r\n                        ) : (\r\n                          <span className=\"block mt-1 text-gray-400 text-xs\">No file</span>\r\n                        )}\r\n                      </form>\r\n                    ) : (\r\n                      inquiry.invoice_file ? (\r\n                        <a\r\n                          href={`${API_BASE}/uploaded_invoices/${inquiry.invoice_file}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className=\"block text-blue-500 text-xs underline\"\r\n                        >\r\n                          View Invoice\r\n                        </a>\r\n                      ) : (\r\n                        <span className=\"block text-gray-400 text-xs\">No file</span>\r\n                      )\r\n                    )}\r\n                  </td>\r\n                )}\r\n\r\n                {/* --- End Invoice column --- */}\r\n                <td className=\"py-3 px-3 border border-gray-200 text-center align-middle whitespace-nowrap\">\r\n                  {pageType === \"backend\" ? inquiry.inquiry_id : inquiry.id}\r\n                </td>\r\n                {columns.map((col) => {\r\n                  const isEditable = editableFields.includes(col.key) && inquiry.sale_team_status !== \"dispatch\";\r\n                  const isDropdown = isDropdownField(col.key);\r\n                  const isAutoSave = isAutoSaveDropdown(col.key);\r\n                  const dropdownOptions = getDropdownOptions(col.key);\r\n                  const fieldValue = inquiry[col.key] ?? \"\";\r\n\r\n                  return (\r\n                    <td\r\n                      key={col.key}\r\n                      className=\"py-3 px-3 border border-gray-200 text-center align-middle whitespace-nowrap\"\r\n                      style={{ position: \"relative\", minHeight: 64 }}\r\n                    >\r\n                      {isAutoSave && inquiry.sale_team_status !== \"Dispatched\" ? (\r\n                        <StatusDropdown\r\n                          options={dropdownOptions}\r\n                          value={fieldValue}\r\n                          onChange={(val) =>\r\n                            onCheckboxChange && onCheckboxChange(inquiry.id, col.key, val)\r\n                          }\r\n                          open={openTypeMenu}\r\n                          setOpen={setOpenTypeMenu}\r\n                          id={inquiry.id}\r\n                          colKey={col.key}\r\n                        />\r\n                      ) : isEditing && isEditable ? (\r\n                        col.label === \"FALSE\" ? (\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={!!editValues[col.key]}\r\n                            onChange={(e) =>\r\n                              setEditValues((prev) => ({ ...prev, [col.key]: e.target.checked }))\r\n                            }\r\n                            className=\"accent-blue-500\"\r\n                          />\r\n                        ) : isDropdown ? (\r\n                          <StatusDropdown\r\n                            options={dropdownOptions}\r\n                            value={editValues[col.key] || \"\"}\r\n                            onChange={(val) =>\r\n                              setEditValues((prev) => ({ ...prev, [col.key]: val }))\r\n                            }\r\n                            open={openTypeMenu}\r\n                            setOpen={setOpenTypeMenu}\r\n                            id={inquiry.id}\r\n                            colKey={col.key}\r\n                          />\r\n                        ) : (\r\n                          <input\r\n                            type=\"text\"\r\n                            value={editValues[col.key] || \"\"}\r\n                            onChange={(e) =>\r\n                              setEditValues((prev) => ({ ...prev, [col.key]: e.target.value }))\r\n                            }\r\n                            className=\"border px-2 py-1 rounded w-full\"\r\n                          />\r\n                        )\r\n                      ) : col.label === \"FALSE\" ? (\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={!!inquiry[col.key]}\r\n                          onChange={e =>\r\n                            onCheckboxChange && onCheckboxChange(inquiry.id, col.key, e.target.checked)\r\n                          }\r\n                          className=\"accent-blue-500\"\r\n                        />\r\n                      ) : isDropdown ? (\r\n                        <StatusBadge status={fieldValue || \"None\"} />\r\n                      ) : (\r\n                        fieldValue\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n                {onDelete && (\r\n                  <td className=\"py-3 px-3 border border-gray-200 text-center whitespace-nowrap\">\r\n                    <div className=\"flex justify-center gap-2\">\r\n                      {isEditing ? (\r\n                        <>\r\n                          <button className=\"text-green-600 font-semibold px-2\" onClick={handleSave}>\r\n                            Save\r\n                          </button>\r\n                          <button className=\"text-gray-500 font-semibold px-2\" onClick={handleCancel}>\r\n                            Cancel\r\n                          </button>\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <button\r\n                            className=\"text-blue-500\"\r\n                            onClick={() => handleEdit(inquiry.id)}\r\n                          >\r\n                            <Pencil className=\"w-5 h-5\" />\r\n                          </button>\r\n                          <button\r\n                            className=\"text-red-500\"\r\n                            onClick={() => onDelete && onDelete(inquiry.id)}\r\n                          >\r\n                            <Trash2 className=\"w-5 h-5\" />\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </td>\r\n                )}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nfunction setTableData(arg0: (prev: any) => any) {\r\n  throw new Error(\"Function not implemented.\");\r\n}\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 833, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/shiv%20krupa/Downloads/Inquiry%20Modal/frontend/utils/auth.ts"],"sourcesContent":["// utils/auth.ts\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nexport function getUserRole(): string | null {\r\n  if (typeof window === 'undefined') {\r\n    return null;\r\n  }\r\n\r\n  const token = localStorage.getItem('token');\r\n  if (!token) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const decoded: any = jwtDecode(token);\r\n    return decoded.role || null;\r\n  } catch (err) {\r\n    console.error(\"Failed to decode token\", err);\r\n    return null;\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,gBAAgB;;;;AAChB;;AAEO,SAAS;IACd,wCAAmC;QACjC,OAAO;IACT;;IAEA,MAAM;AAYR","debugId":null}},
    {"offset": {"line": 948, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/shiv%20krupa/Downloads/Inquiry%20Modal/frontend/app/dashboard/inquiries/InquiriesPageClient.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport InquiryTable from '@/components/InquiryTable';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport { getUserRole } from '@/utils/auth';\r\nimport axios from 'axios';\r\nimport { useNotification } from \"@/context/NotificationContext\";\r\nimport API_BASE from \"@/utils/config\";\r\n\r\n\r\nconst API_URL = `${API_BASE}/inquiries`;\r\n\r\nconst columns = [\r\n  { key: 'inqDate', label: 'INQ Date' },\r\n  { key: 'todayDate', label: 'Today Date' },\r\n  { key: 'period', label: 'Period' },\r\n  { key: 'sales', label: 'SALES' },\r\n  { key: 'buyer', label: 'Buyer' },\r\n  { key: 'stockId', label: 'STOCK ID' },\r\n  { key: 'shape', label: 'Shape' },\r\n  { key: 'ct', label: 'Ct' },\r\n  { key: 'color', label: 'Color' },\r\n  { key: 'clarity', label: 'Clarity' },\r\n  { key: 'cut', label: 'Cut' },\r\n  { key: 'po', label: 'PO' },\r\n  { key: 'sym', label: 'SYM' },\r\n  { key: 'lab', label: 'LAB' },\r\n  { key: 'report', label: 'REPORT' },\r\n  { key: 'disPpc', label: 'DIS/PPC' },\r\n  { key: 'ppc', label: 'PPC' },\r\n  { key: 'amt', label: 'AMT' },\r\n  { key: 'type', label: 'Type' },\r\n  { key: 'availability', label: 'Sale Team Status' },\r\n  { key: 'payment', label: 'Payment' },\r\n  { key: 'remark', label: 'Remark/ Request' },\r\n  { key: 'location', label: 'Location' },\r\n  { key: 'otRemark', label: 'Backend Status' },\r\n  { key: 'time', label: 'Time' },\r\n  { key: 'statusOfStone', label: 'Status Of Stone' },\r\n  { key: 'qcRemark', label: 'QC REMARK' },\r\n  { key: 'stoneConfirmationRemark', label: 'Stone Confirmation Remark' },\r\n  { key: 'entryStatus', label: 'ENTRY STATUS' },\r\n  { key: 'locationRemark', label: 'Location Remark' },\r\n];\r\n\r\nexport default function InquiriesPage() {\r\n  const [inquiries, setInquiries] = useState<any[]>([]);\r\n  const [filteredInquiries, setFilteredInquiries] = useState<any[]>([]);\r\n  const [inputInquiryNo, setInputInquiryNo] = useState('');\r\n  const [inputReport, setInputReport] = useState('');\r\n  const [inputAvailability, setInputAvailability] = useState('');\r\n  const [inputFrom, setInputFrom] = useState('');\r\n  const [role, setRole] = useState<string | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const [generatedId, setGeneratedId] = useState('');\r\n\r\n\r\n  const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null;\r\n  const newlyAddedId = searchParams.get('newlyAddedId');\r\n\r\n  useEffect(() => {\r\n    const r = getUserRole();\r\n    if (!r) {\r\n      router.push('/login');\r\n    } else if (!['admin', 'sales', 'backend'].includes(r)) {\r\n      router.push('/dashboard/inquiries');\r\n    } else {\r\n      setRole(r);\r\n      fetchInquiries();\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const fetchInquiries = async () => {\r\n    try {\r\n      const res = await fetch(`${API_URL}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const text = await res.text();\r\n        throw new Error(text || 'Failed to fetch inquiries');\r\n      }\r\n\r\n      const raw = await res.json();\r\n      const data = Array.isArray(raw) ? raw : raw.data;\r\n\r\n      if (!Array.isArray(data)) {\r\n        console.error(\"❌ API did not return an array:\", raw);\r\n        return;\r\n      }\r\n      const transformed = data.map((item: any) => ({\r\n        ...item,\r\n        inqDate: item.inquiry_date,\r\n        todayDate: item.today_date,\r\n        stockId: item.stock_id,\r\n        disPpc: item.dis_ppc,\r\n        availability: item.sale_team_status,\r\n        remark: item.remark_request,\r\n        otRemark: item.backend_status,\r\n        statusOfStone: item.status_of_stone,\r\n        qcRemark: item.qc_remark,\r\n        stoneConfirmationRemark: item.stone_confirmation_remark,\r\n        entryStatus: item.entry_status,\r\n        locationRemark: item.location_remark,\r\n      }));\r\n      const sorted = [...transformed].sort(\r\n        (a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime()\r\n      );\r\n\r\n      const pendingOnly = sorted.filter((inq) => inq.availability === \"Pending\");\r\n      setInquiries(pendingOnly);\r\n      setFilteredInquiries(pendingOnly);\r\n    } catch (err) {\r\n      console.error('Error fetching inquiries:', err);\r\n    }\r\n  };\r\n\r\n  const handleAutoSaveDropdown = async (id: number | string, key: string, value: string | boolean) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\") || \"\";\r\n      const role = localStorage.getItem(\"role\") || \"\";\r\n      const userName = localStorage.getItem(\"userName\") || \"\";\r\n      const userKey = `${role}_${userName}`;\r\n\r\n\r\n      if (!token) {\r\n        console.error(\"No token found in localStorage.\");\r\n        return;\r\n      }\r\n\r\n      const fieldMap: { [key: string]: string } = {\r\n        disPpc: \"dis_ppc\",\r\n        availability: \"sale_team_status\",\r\n        otRemark: \"backend_status\",\r\n        remark: \"remark_request\",\r\n        stockId: \"stock_id\",\r\n        statusOfStone: \"status_of_stone\",\r\n        qcRemark: \"qc_remark\",\r\n        stoneConfirmationRemark: \"stone_confirmation_remark\",\r\n        entryStatus: \"entry_status\",\r\n        locationRemark: \"location_remark\",\r\n      };\r\n\r\n      const backendKey = fieldMap[key] || key;\r\n\r\n      const response = await axios.patch(`${API_BASE}/inquiries/${id}`, {\r\n        [backendKey]: value,\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      const updated = response.data;\r\n\r\n      const updatedItem = {\r\n        ...updated,\r\n        updated_at: new Date().toISOString(), // ⬅️ force refresh timestamp\r\n        inqDate: updated.inquiry_date,\r\n        todayDate: updated.today_date,\r\n        stockId: updated.stock_id,\r\n        disPpc: updated.dis_ppc,\r\n        availability: updated.sale_team_status,\r\n        remark: updated.remark_request,\r\n        otRemark: updated.backend_status,\r\n        statusOfStone: updated.status_of_stone,\r\n        qcRemark: updated.qc_remark,\r\n        stoneConfirmationRemark: updated.stone_confirmation_remark,\r\n        entryStatus: updated.entry_status,\r\n        locationRemark: updated.location_remark,\r\n      };\r\n\r\n      const updatedList = [\r\n        updatedItem,\r\n        ...inquiries.filter((item) => item.id !== id),\r\n      ];\r\n\r\n      const sorted = updatedList.sort(\r\n        (a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime()\r\n      );\r\n      setInquiries(sorted);\r\n      setFilteredInquiries(sorted);\r\n      console.log(\"✅ Auto-saved:\", backendKey, value);\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        console.error(\"❌ Auto-save failed:\", {\r\n          status: error.response.status,\r\n          message: error.response.data.detail || error.response.data,\r\n        });\r\n      } else {\r\n        console.error(\"❌ Auto-save error:\", error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleSearch = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const fromDate = inputFrom ? new Date(inputFrom) : null;\r\n\r\n    const filtered = inquiries.filter((inq) => {\r\n      const inqDate = new Date(inq.inqDate);\r\n      return (\r\n        (!inputInquiryNo || String(inq.id).includes(inputInquiryNo)) &&\r\n        (!inputReport || inq.report?.toLowerCase().includes(inputReport.toLowerCase())) &&\r\n        (!inputAvailability || inq.availability === inputAvailability) &&\r\n        (!fromDate || inqDate >= fromDate)\r\n      );\r\n    });\r\n\r\n    setFilteredInquiries(filtered);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setInputInquiryNo('');\r\n    setInputReport('');\r\n    setInputAvailability('');\r\n    setInputFrom('');\r\n    setFilteredInquiries(inquiries);\r\n  };\r\n\r\n  const handleDeleteInquiry = async (id: number | string) => {\r\n    console.log(\"🗑 Deleting inquiry:\", id); // ✅ Add here to confirm click is working\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const res = await fetch(`${API_BASE}/inquiries/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const error = await res.text();\r\n        throw new Error(error || \"Delete failed\");\r\n      }\r\n\r\n      // Remove deleted item from state\r\n      setInquiries(prev => prev.filter(inq => inq.id !== id));\r\n      setFilteredInquiries(prev => prev.filter(inq => inq.id !== id));\r\n      console.log(\"✅ Deleted:\", id); // ✅ Confirm deletion\r\n    } catch (err) {\r\n      console.error(\"❌ Failed to delete inquiry\", err);\r\n      alert(\"Something went wrong while deleting.\");\r\n    }\r\n  };\r\n\r\n\r\n  const handleEdit = async (id: number | string, updatedRow: any) => {\r\n    const requestBody = {\r\n      ...updatedRow,\r\n      sale_team_status: updatedRow.availability,\r\n      backend_status: updatedRow.otRemark,\r\n      dis_ppc: updatedRow.disPpc,\r\n      remark_request: updatedRow.remark,\r\n      stock_id: updatedRow.stockId,\r\n      payment: updatedRow.payment,\r\n      status_of_stone: updatedRow.statusOfStone,\r\n      qc_remark: updatedRow.qcRemark,\r\n      stone_confirmation_remark: updatedRow.stoneConfirmationRemark,\r\n      entry_status: updatedRow.entryStatus,\r\n      location_remark: updatedRow.locationRemark,\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(`${API_URL}/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(requestBody),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const text = await res.text();\r\n        console.error('Failed to update inquiry:', text);\r\n        throw new Error(text);\r\n      }\r\n\r\n      const updated = await res.json();\r\n      const updatedRowMapped = {\r\n        ...updated,\r\n        inqDate: updated.inquiry_date,\r\n        todayDate: updated.today_date,\r\n        stockId: updated.stock_id,\r\n        disPpc: updated.dis_ppc,\r\n        availability: updated.sale_team_status,\r\n        remark: updated.remark_request,\r\n        otRemark: updated.backend_status,\r\n        statusOfStone: updated.status_of_stone,\r\n        qcRemark: updated.qc_remark,\r\n        stoneConfirmationRemark: updated.stone_confirmation_remark,\r\n        entryStatus: updated.entry_status,\r\n        locationRemark: updated.location_remark,\r\n      };\r\n\r\n      const newInquiries = [\r\n        updatedRowMapped,\r\n        ...inquiries.filter((inq) => inq.id !== id),\r\n      ];\r\n\r\n\r\n      const sorted = newInquiries.sort(\r\n        (a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime()\r\n      );\r\n      setInquiries(sorted);\r\n      setFilteredInquiries(sorted);\r\n    } catch (err) {\r\n      console.error('Edit failed:', err);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleFieldChange = async (id: number | string, key: string, value: string | boolean) => {\r\n    try {\r\n      const keyMap: { [key: string]: string } = {\r\n        availability: \"sale_team_status\",\r\n        remark: \"remark_request\",\r\n        otRemark: \"backend_status\",\r\n        stockId: \"stock_id\",\r\n        disPpc: \"dis_ppc\",\r\n        statusOfStone: \"status_of_stone\",\r\n        qcRemark: \"qc_remark\",\r\n        stoneConfirmationRemark: \"stone_confirmation_remark\",\r\n        entryStatus: \"entry_status\",\r\n        locationRemark: \"location_remark\",\r\n      };\r\n\r\n      const backendKey = keyMap[key] || key;\r\n\r\n      await axios.put(`${API_BASE}/inquiries/${id}`, {\r\n        [backendKey]: value,\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      // Refresh data or optimistically update UI if needed\r\n    } catch (err) {\r\n      console.error(\"Auto-save failed:\", err);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"p-6 bg-white rounded-lg shadow-md h-[1000px]\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Inquiries</h1>\r\n\r\n      {/* Filter Form */}\r\n      <div className=\"flex flex-wrap gap-4 mb-6 items-end\">\r\n        <form className=\"flex flex-wrap gap-4 items-end mb-6\" onSubmit={handleSearch}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Inquiry No\"\r\n            className=\"border border-gray-600 rounded px-2 py-1 text-sm min-w-[140px]\"\r\n            value={inputInquiryNo}\r\n            onChange={(e) => setInputInquiryNo(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Report No\"\r\n            className=\"border border-gray-600 rounded px-2 py-1 text-sm min-w-[140px]\"\r\n            value={inputReport}\r\n            onChange={(e) => setInputReport(e.target.value)}\r\n          />\r\n          <select\r\n            className=\"border border-gray-600 rounded px-2 py-1 text-sm min-w-[180px]\"\r\n            value={inputAvailability}\r\n            onChange={(e) => setInputAvailability(e.target.value)}\r\n          >\r\n            <option value=\"\">Sale Team Status</option>\r\n            <option value=\"Available\">Available</option>\r\n            <option value=\"Not Available\">Not Available</option>\r\n            <option value=\"Hold\">Hold</option>\r\n            <option value=\"On Memo\">On Memo</option>\r\n            <option value=\"Confirmed - TOH\">Confirmed - TOH</option>\r\n            <option value=\"Hold - TOH\">Hold - TOH</option>\r\n            <option value=\"Release\">Release</option>\r\n            <option value=\"ADDED TO STOCK\">ADDED TO STOCK</option>\r\n            <option value=\"IN EXHIBITION\">IN EXHIBITION</option>\r\n            <option value=\"Pending\">Pending</option>\r\n          </select>\r\n          <input\r\n            type=\"date\"\r\n            className=\"border border-gray-600 rounded px-2 py-1 text-sm min-w-[180px]\"\r\n            value={inputFrom}\r\n            onChange={(e) => setInputFrom(e.target.value)}\r\n          />\r\n          <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition text-sm\">\r\n            Search\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleReset}\r\n            className=\"bg-red-400 text-white px-4 py-2 rounded hover:bg-red-500 transition text-sm\"\r\n          >\r\n            Reset\r\n          </button>\r\n        </form>\r\n        {/* ✅ Conditionally render \"+ New Inquiry\" button */}\r\n        {['admin', 'sales'].includes(role || '') && (\r\n          <div className=\"ml-auto\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700 transition text-sm\"\r\n              onClick={() => router.push('/dashboard/inquiries/add')}\r\n            >\r\n              + New Inquiry\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <InquiryTable\r\n        data={filteredInquiries}\r\n        columns={columns}\r\n        onDelete={handleDeleteInquiry}\r\n        onEdit={handleEdit}\r\n        defaultAvailability=\"Pending\"\r\n        role={role || ''}\r\n        onCheckboxChange={handleAutoSaveDropdown} selectedRows={[]} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1577, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/shiv%20krupa/Downloads/Inquiry%20Modal/frontend/app/dashboard/inquiries/page.tsx"],"sourcesContent":["'use client';\r\nimport { Suspense } from \"react\";\r\nimport InquiriesPageClient from \"./InquiriesPageClient\";\r\n\r\nexport default function Page() {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <InquiriesPageClient />\r\n    </Suspense>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS;IACtB,qBACE,8OAAC,qMAAA,CAAA,WAAQ;QAAC,wBAAU,8OAAC;sBAAI;;;;;;kBACvB,cAAA,8OAAC,qJAAA,CAAA,UAAmB;;;;;;;;;;AAG1B","debugId":null}}]
}