{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/shiv%20krupa/Downloads/Inquiry%20Modal/frontend/app/dashboard/inquiries/add/page.tsx"],"sourcesContent":["'use client';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { PlusIcon } from '@heroicons/react/24/solid';\r\nimport API_BASE from \"@/utils/config\";\r\n\r\n\r\nconst initialState = {\r\n  inquiryId: '',\r\n  inqDate: '',\r\n  todayDate: new Date().toISOString().slice(0, 10),\r\n  Period: '',\r\n  sales: '',\r\n  buyer: '',\r\n  stockId: '',\r\n  shape: '',\r\n  ct: '',\r\n  color: '',\r\n  clarity: '',\r\n  cut: '',\r\n  po: '',\r\n  sym: '',\r\n  lab: '',\r\n  report: '',\r\n  disPpc: '',\r\n  ppc: '',\r\n  amt: '',\r\n  type: '',\r\n  availability: 'Pending',\r\n  remark: '',\r\n};\r\n\r\ntype InquiryType = typeof initialState;\r\n\r\nexport default function AddInquiryPage() {\r\n  const [inquiryData, setInquiryData] = useState(initialState);\r\n  const [inquiries, setInquiries] = useState<InquiryType[]>([{ ...initialState }]);\r\n  const [generatedId, setGeneratedId] = useState('');\r\n  const router = useRouter();\r\n\r\n\r\n  const tableFields = [\r\n    \"stockId\", \"shape\", \"ct\", \"color\", \"clarity\", \"cut\", \"po\", \"sym\", \"report\", \"lab\", \"disPpc\", \"ppc\", \"amt\"\r\n  ];\r\n\r\n  const generateInquiryId = () =>\r\n    `${Date.now()}-${Math.floor(Math.random() * 10000)}`;\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInquiryData({ ...inquiryData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const userId = localStorage.getItem('userId');\r\n    if (!token || !userId) {\r\n      alert(\"You are not logged in. Please login again.\");\r\n      router.push(\"/\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      for (const row of inquiries) {\r\n        const inquiryId = row.inquiryId || generatedId;\r\n\r\n        const body = {\r\n          inquiry_id: inquiryId,\r\n          inquiry_date: inquiryData.inqDate || new Date().toISOString().slice(0, 10),\r\n          today_date: inquiryData.todayDate || new Date().toISOString().slice(0, 10),\r\n          period: inquiryData.Period,\r\n          sales: inquiryData.sales,\r\n          buyer: inquiryData.buyer,\r\n          stock_id: row.stockId,\r\n          shape: row.shape,\r\n          ct: row.ct,\r\n          color: row.color,\r\n          clarity: row.clarity,\r\n          cut: row.cut,\r\n          po: row.po,\r\n          sym: row.sym,\r\n          lab: row.lab,\r\n          report: row.report,\r\n          dis_ppc: row.disPpc,\r\n          ppc: row.ppc,\r\n          amt: row.amt,\r\n          type: inquiryData.type,\r\n          sale_team_status: inquiryData.availability,\r\n          payment: \"\",\r\n          remark_request: inquiryData.remark,\r\n          location: \"\",\r\n          backend_status: \"\",\r\n          time: \"00:00:00\",\r\n          status_of_stone: \"\",\r\n          qc_remark: \"\",\r\n          stone_confirmation_remark: \"\",\r\n          entry_status: \"\",\r\n          location_remark: \"\",\r\n          created_by: parseInt(userId),\r\n          created_at: new Date().toISOString(),\r\n          invoice_file: \"\",\r\n        };\r\n\r\n        const response = await fetch(`${API_BASE}/inquiries/`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify(body),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(errorText);\r\n        }\r\n\r\n      }\r\n\r\n      alert(\"Inquiry saved successfully!\");\r\n      router.push(\"/dashboard/inquiries\");\r\n\r\n    } catch (error: any) {\r\n      console.error(\"Error saving inquiry:\", error);\r\n      alert(\"Failed to save inquiry: \" + (error?.message || \"Check console\"));\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    router.push('/dashboard/inquiries');\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setInquiryData(initialState);\r\n    setInquiries([{ ...initialState }]);\r\n  };\r\n\r\n  const handlePasteRow = (\r\n    e: React.ClipboardEvent<HTMLInputElement>,\r\n    startRowIdx: number,\r\n    startKey: string\r\n  ) => {\r\n    const pasted = e.clipboardData.getData(\"text\");\r\n    const rows = pasted.split(/\\r?\\n/).filter(row => row.trim() !== \"\");\r\n    if (rows.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const colStartIdx = tableFields.indexOf(startKey);\r\n    const newInquiries: InquiryType[] = [...inquiries];\r\n\r\n    rows.forEach((rowStr, rowOffset) => {\r\n      const values = rowStr.split(/\\t|,/);\r\n      const targetRowIdx = startRowIdx + rowOffset;\r\n\r\n      if (!newInquiries[targetRowIdx]) {\r\n        newInquiries[targetRowIdx] = {\r\n          ...initialState,\r\n          inquiryId: generateInquiryId()\r\n        };\r\n      }\r\n\r\n      if (!newInquiries[targetRowIdx].inquiryId) {\r\n        newInquiries[targetRowIdx].inquiryId = generateInquiryId();\r\n      }\r\n\r\n      for (let i = 0; i < values.length; i++) {\r\n        const colIdx = colStartIdx + i;\r\n        if (colIdx < tableFields.length) {\r\n          const key = tableFields[colIdx] as keyof InquiryType;\r\n          newInquiries[targetRowIdx][key] = values[i];\r\n        }\r\n      }\r\n    });\r\n\r\n    setInquiries(newInquiries);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    setInquiries([...inquiries, {\r\n      ...initialState,\r\n      inquiryId: generateInquiryId()\r\n    }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchInquiryId = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        alert(\"You are not logged in. Please login again.\");\r\n        router.push(\"/\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const res = await fetch(`${API_BASE}/inquiries/new-id`, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n        const data = await res.json();\r\n        setGeneratedId(data.inquiry_id);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch inquiry ID\", error);\r\n      }\r\n    };\r\n\r\n    fetchInquiryId();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-white shadow rounded-lg p-6 max-w-full overflow-x-auto\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Add New Inquiry</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        <div>\r\n          <label className=\"block text-sm font-medium mb-1\">Inquiry ID</label>\r\n          <input\r\n            type=\"text\"\r\n            value={generatedId || \"\"}\r\n            readOnly\r\n            className=\"w-full border border-gray-300 bg-gray-100 rounded px-3 py-2 text-sm\"\r\n          />\r\n        </div>\r\n\r\n        {Object.keys(initialState)\r\n          .filter(key => !tableFields.includes(key) && key !== \"type\" && key !== \"availability\" && key !== \"remark\" && key !== \"inquiryId\")\r\n          .map((key) => (\r\n            <div key={key}>\r\n              <label className=\"block text-sm font-medium mb-1 capitalize\">\r\n                {key.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' ')}\r\n              </label>\r\n              <input\r\n                type={key === 'inqDate' || key === 'todayDate' ? 'date' : 'text'}\r\n                name={key}\r\n                value={inquiryData[key as keyof typeof initialState] || \"\"}\r\n                onChange={handleChange}\r\n                className=\"w-full border border-gray-300 rounded px-3 py-2 text-sm\"\r\n                readOnly={key === 'todayDate'}\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n        <div className=\"md:col-span-4 flex flex-col md:flex-row gap-4\">\r\n          <div className=\"flex-1\">\r\n            <label className=\"block text-sm font-medium mb-1\">Type</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"type\"\r\n              value={inquiryData.type}\r\n              onChange={handleChange}\r\n              className=\"w-full border border-gray-300 rounded px-3 py-2 text-sm\"\r\n            />\r\n          </div>\r\n          <div className=\"flex-1\">\r\n            <label className=\"block text-sm font-medium mb-1\">Sale Team Status</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"availability\"\r\n              value={inquiryData.availability}\r\n              onChange={handleChange}\r\n              className=\"w-full border border-gray-300 rounded px-3 py-2 text-sm\"\r\n            />\r\n          </div>\r\n          <div className=\"flex-1\">\r\n            <label className=\"block text-sm font-medium mb-1\">Remark / Request</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"remark\"\r\n              value={inquiryData.remark}\r\n              onChange={handleChange}\r\n              className=\"w-full border border-gray-300 rounded px-3 py-2 text-sm\"\r\n              placeholder=\"Enter remark or request\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex justify-end items-center mt-4\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleAddRow}\r\n          className=\"flex items-center gap-1 px-3 py-1 bg-gray-700 hover:bg-gray-900 text-white rounded\"\r\n        >\r\n          <PlusIcon className=\"h-5 w-5\" />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"overflow-x-auto mt-2\">\r\n        <table className=\"min-w-full border border-gray-300\">\r\n          <thead>\r\n            <tr>\r\n              {tableFields.map((key) => (\r\n                <th key={key} className=\"px-3 py-2 border-b border-gray-300 text-sm font-semibold capitalize\">\r\n                  {key.replace(/([a-z])([A-Z])/g, '$1 $2').replace(/_/g, ' ')}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {inquiries.map((row, rowIdx) => (\r\n              <tr key={rowIdx}>\r\n                {tableFields.map((key) => (\r\n                  <td key={key} className=\"px-3 py-2 border-b border-gray-200\">\r\n                    <input\r\n                      type=\"text\"\r\n                      name={key}\r\n                      value={row[key as keyof InquiryType] || \"\"}\r\n                      onChange={e => {\r\n                        const updated = [...inquiries];\r\n                        updated[rowIdx][key as keyof InquiryType] = e.target.value;\r\n                        setInquiries(updated);\r\n                      }}\r\n                      onPaste={(e) => handlePasteRow(e, rowIdx, key)}\r\n                      className=\"w-full border border-gray-300 rounded px-2 py-1 text-sm\"\r\n                    />\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"flex justify-end gap-4 mt-6\">\r\n        <button\r\n          onClick={handleClose}\r\n          className=\"px-5 py-2 bg-red-500 hover:bg-red-600 text-white rounded\"\r\n        >\r\n          Close\r\n        </button>\r\n        <button\r\n          onClick={handleClear}\r\n          type=\"button\"\r\n          className=\"px-5 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded\"\r\n        >\r\n          Clean\r\n        </button>\r\n        <button\r\n          onClick={handleSave}\r\n          className=\"px-5 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded\"\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/shiv%20krupa/Downloads/Inquiry%20Modal/frontend/node_modules/%40heroicons/react/24/solid/esm/PlusIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction PlusIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M12 3.75a.75.75 0 0 1 .75.75v6.75h6.75a.75.75 0 0 1 0 1.5h-6.75v6.75a.75.75 0 0 1-1.5 0v-6.75H4.5a.75.75 0 0 1 0-1.5h6.75V4.5a.75.75 0 0 1 .75-.75Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PlusIcon);\nexport default ForwardRef;"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,SAAS,EAChB,KAAK,EACL,OAAO,EACP,GAAG,OACJ,EAAE,MAAM;IACP,OAAO,WAAW,GAAE,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EAAE,OAAO,OAAO,MAAM,CAAC;QAC3D,OAAO;QACP,SAAS;QACT,MAAM;QACN,eAAe;QACf,aAAa;QACb,KAAK;QACL,mBAAmB;IACrB,GAAG,QAAQ,QAAQ,WAAW,GAAE,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EAAE,SAAS;QAC3D,IAAI;IACN,GAAG,SAAS,MAAM,WAAW,GAAE,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EAAE,QAAQ;QACzD,UAAU;QACV,GAAG;QACH,UAAU;IACZ;AACF;AACA,MAAM,aAAa,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;uCACnC","ignoreList":[0],"debugId":null}}]
}